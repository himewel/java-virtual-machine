vendor_name = ModelSim
source_file = 1, /home/hime/Documentos/Java/ULA.vhd
source_file = 1, /home/hime/Documentos/Java/Stack.vhd
source_file = 1, /home/hime/Documentos/Java/RAM.vhd
source_file = 1, /home/hime/Documentos/Java/PC.vhd
source_file = 1, /home/hime/Documentos/Java/Main.vhd
source_file = 1, /home/hime/Documentos/Java/CONTROLE.vhd
source_file = 1, /home/hime/Documentos/Java/VAR.vhd
source_file = 1, /home/hime/Documentos/Java/BRANCH.vhd
source_file = 1, /home/hime/Documentos/Java/Waveform.vwf
source_file = 1, /home/hime/Documentos/Java/Waveform1.vwf
source_file = 1, /home/hime/Documentos/Java/Waveform2.vwf
source_file = 1, /home/hime/Documentos/Java/Waveform3.vwf
source_file = 1, /home/hime/Documentos/Java/db/Java.cbx.xml
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/altsyncram.tdf
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/stratix_ram_block.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/lpm_mux.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/lpm_decode.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/aglobal130.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/a_rdenreg.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/altrom.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/altram.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/cbx.lst
source_file = 1, /home/hime/Documentos/Java/db/altsyncram_ra41.tdf
source_file = 1, /home/hime/Documentos/Java/db/altsyncram_j8c1.tdf
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/lpm_mult.tdf
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/lpm_add_sub.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/multcore.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/bypassff.inc
source_file = 1, /home/hime/altera/13.0sp1/quartus/libraries/megafunctions/altshift.inc
source_file = 1, /home/hime/Documentos/Java/db/mult_19t.tdf
design_name = Main
instance = comp, \mem|addr_reg[6] , mem|addr_reg[6], Main, 1
instance = comp, \mem|addr_reg[10] , mem|addr_reg[10], Main, 1
instance = comp, \mem|ram~4 , mem|ram~4, Main, 1
instance = comp, \mem|ram~10 , mem|ram~10, Main, 1
instance = comp, \mem|ram~12 , mem|ram~12, Main, 1
instance = comp, \myUla|Add0~0 , myUla|Add0~0, Main, 1
instance = comp, \control|opcode[2] , control|opcode[2], Main, 1
instance = comp, \myUla|Add0~10 , myUla|Add0~10, Main, 1
instance = comp, \myUla|Add0~14 , myUla|Add0~14, Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[1] , pilha|ram_rtl_0_bypass[1], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[3] , pilha|ram_rtl_0_bypass[3], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[4] , pilha|ram_rtl_0_bypass[4], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[2] , pilha|ram_rtl_0_bypass[2], Main, 1
instance = comp, \pilha|ram~14 , pilha|ram~14, Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[5] , pilha|ram_rtl_0_bypass[5], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[0] , pilha|ram_rtl_0_bypass[0], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[16] , pilha|ram_rtl_0_bypass[16], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[18] , pilha|ram_rtl_0_bypass[18], Main, 1
instance = comp, \myUla|Equal2~1 , myUla|Equal2~1, Main, 1
instance = comp, \control|state.resetPC~5 , control|state.resetPC~5, Main, 1
instance = comp, \control|state.resetPC~9 , control|state.resetPC~9, Main, 1
instance = comp, \control|state~33 , control|state~33, Main, 1
instance = comp, \control|state~37 , control|state~37, Main, 1
instance = comp, \control|state~39 , control|state~39, Main, 1
instance = comp, \control|state~45 , control|state~45, Main, 1
instance = comp, \control|state~49 , control|state~49, Main, 1
instance = comp, \control|cont_operandos[1]~3 , control|cont_operandos[1]~3, Main, 1
instance = comp, \control|cont_salto~1 , control|cont_salto~1, Main, 1
instance = comp, \mem|addr_reg[6]~feeder , mem|addr_reg[6]~feeder, Main, 1
instance = comp, \mem|addr_reg[10]~feeder , mem|addr_reg[10]~feeder, Main, 1
instance = comp, \pc_counter[0]~output , pc_counter[0]~output, Main, 1
instance = comp, \pc_counter[1]~output , pc_counter[1]~output, Main, 1
instance = comp, \pc_counter[2]~output , pc_counter[2]~output, Main, 1
instance = comp, \pc_counter[3]~output , pc_counter[3]~output, Main, 1
instance = comp, \pc_counter[4]~output , pc_counter[4]~output, Main, 1
instance = comp, \pc_counter[5]~output , pc_counter[5]~output, Main, 1
instance = comp, \pc_counter[6]~output , pc_counter[6]~output, Main, 1
instance = comp, \pc_counter[7]~output , pc_counter[7]~output, Main, 1
instance = comp, \pc_counter[8]~output , pc_counter[8]~output, Main, 1
instance = comp, \pc_counter[9]~output , pc_counter[9]~output, Main, 1
instance = comp, \pc_counter[10]~output , pc_counter[10]~output, Main, 1
instance = comp, \pc_counter[11]~output , pc_counter[11]~output, Main, 1
instance = comp, \data_out[0]~output , data_out[0]~output, Main, 1
instance = comp, \data_out[1]~output , data_out[1]~output, Main, 1
instance = comp, \data_out[2]~output , data_out[2]~output, Main, 1
instance = comp, \data_out[3]~output , data_out[3]~output, Main, 1
instance = comp, \data_out[4]~output , data_out[4]~output, Main, 1
instance = comp, \data_out[5]~output , data_out[5]~output, Main, 1
instance = comp, \data_out[6]~output , data_out[6]~output, Main, 1
instance = comp, \data_out[7]~output , data_out[7]~output, Main, 1
instance = comp, \stack_in[0]~output , stack_in[0]~output, Main, 1
instance = comp, \stack_in[1]~output , stack_in[1]~output, Main, 1
instance = comp, \stack_in[2]~output , stack_in[2]~output, Main, 1
instance = comp, \stack_in[3]~output , stack_in[3]~output, Main, 1
instance = comp, \stack_in[4]~output , stack_in[4]~output, Main, 1
instance = comp, \stack_in[5]~output , stack_in[5]~output, Main, 1
instance = comp, \stack_in[6]~output , stack_in[6]~output, Main, 1
instance = comp, \stack_in[7]~output , stack_in[7]~output, Main, 1
instance = comp, \stack_out[0]~output , stack_out[0]~output, Main, 1
instance = comp, \stack_out[1]~output , stack_out[1]~output, Main, 1
instance = comp, \stack_out[2]~output , stack_out[2]~output, Main, 1
instance = comp, \stack_out[3]~output , stack_out[3]~output, Main, 1
instance = comp, \stack_out[4]~output , stack_out[4]~output, Main, 1
instance = comp, \stack_out[5]~output , stack_out[5]~output, Main, 1
instance = comp, \stack_out[6]~output , stack_out[6]~output, Main, 1
instance = comp, \stack_out[7]~output , stack_out[7]~output, Main, 1
instance = comp, \ula_out[0]~output , ula_out[0]~output, Main, 1
instance = comp, \ula_out[1]~output , ula_out[1]~output, Main, 1
instance = comp, \ula_out[2]~output , ula_out[2]~output, Main, 1
instance = comp, \ula_out[3]~output , ula_out[3]~output, Main, 1
instance = comp, \ula_out[4]~output , ula_out[4]~output, Main, 1
instance = comp, \ula_out[5]~output , ula_out[5]~output, Main, 1
instance = comp, \ula_out[6]~output , ula_out[6]~output, Main, 1
instance = comp, \ula_out[7]~output , ula_out[7]~output, Main, 1
instance = comp, \a[0]~output , a[0]~output, Main, 1
instance = comp, \a[1]~output , a[1]~output, Main, 1
instance = comp, \a[2]~output , a[2]~output, Main, 1
instance = comp, \a[3]~output , a[3]~output, Main, 1
instance = comp, \a[4]~output , a[4]~output, Main, 1
instance = comp, \a[5]~output , a[5]~output, Main, 1
instance = comp, \a[6]~output , a[6]~output, Main, 1
instance = comp, \a[7]~output , a[7]~output, Main, 1
instance = comp, \b[0]~output , b[0]~output, Main, 1
instance = comp, \b[1]~output , b[1]~output, Main, 1
instance = comp, \b[2]~output , b[2]~output, Main, 1
instance = comp, \b[3]~output , b[3]~output, Main, 1
instance = comp, \b[4]~output , b[4]~output, Main, 1
instance = comp, \b[5]~output , b[5]~output, Main, 1
instance = comp, \b[6]~output , b[6]~output, Main, 1
instance = comp, \b[7]~output , b[7]~output, Main, 1
instance = comp, \out_addr[0]~output , out_addr[0]~output, Main, 1
instance = comp, \out_addr[1]~output , out_addr[1]~output, Main, 1
instance = comp, \out_addr[2]~output , out_addr[2]~output, Main, 1
instance = comp, \out_addr[3]~output , out_addr[3]~output, Main, 1
instance = comp, \out_addr[4]~output , out_addr[4]~output, Main, 1
instance = comp, \out_addr[5]~output , out_addr[5]~output, Main, 1
instance = comp, \out_addr[6]~output , out_addr[6]~output, Main, 1
instance = comp, \out_addr[7]~output , out_addr[7]~output, Main, 1
instance = comp, \out_addr[8]~output , out_addr[8]~output, Main, 1
instance = comp, \out_addr[9]~output , out_addr[9]~output, Main, 1
instance = comp, \out_addr[10]~output , out_addr[10]~output, Main, 1
instance = comp, \out_addr[11]~output , out_addr[11]~output, Main, 1
instance = comp, \igual~output , igual~output, Main, 1
instance = comp, \maior~output , maior~output, Main, 1
instance = comp, \menor~output , menor~output, Main, 1
instance = comp, \program_counter|pc[0]~12 , program_counter|pc[0]~12, Main, 1
instance = comp, \program_counter|pc[1]~14 , program_counter|pc[1]~14, Main, 1
instance = comp, \program_counter|pc[5]~22 , program_counter|pc[5]~22, Main, 1
instance = comp, \program_counter|pc[6]~24 , program_counter|pc[6]~24, Main, 1
instance = comp, \program_counter|pc[3]~18 , program_counter|pc[3]~18, Main, 1
instance = comp, \~GND , ~GND, Main, 1
instance = comp, \mem|addr_reg[1] , mem|addr_reg[1], Main, 1
instance = comp, \mem|addr_reg[0] , mem|addr_reg[0], Main, 1
instance = comp, \mem|ram~8 , mem|ram~8, Main, 1
instance = comp, \mem|ram~9 , mem|ram~9, Main, 1
instance = comp, \rst_externo~input , rst_externo~input, Main, 1
instance = comp, \rst_externo~inputclkctrl , rst_externo~inputclkctrl, Main, 1
instance = comp, \mem|ram~13 , mem|ram~13, Main, 1
instance = comp, \control|opcode[6] , control|opcode[6], Main, 1
instance = comp, \control|cont_operandos[1]~2 , control|cont_operandos[1]~2, Main, 1
instance = comp, \program_counter|pc[2]~16 , program_counter|pc[2]~16, Main, 1
instance = comp, \mem|ram~6 , mem|ram~6, Main, 1
instance = comp, \mem|ram~7 , mem|ram~7, Main, 1
instance = comp, \calc_branch|branch2[2]~feeder , calc_branch|branch2[2]~feeder, Main, 1
instance = comp, \control|state~51 , control|state~51, Main, 1
instance = comp, \control|state.verificaComparacao , control|state.verificaComparacao, Main, 1
instance = comp, \control|cont_salto~0 , control|cont_salto~0, Main, 1
instance = comp, \control|opcode[1] , control|opcode[1], Main, 1
instance = comp, \control|opcode[0] , control|opcode[0], Main, 1
instance = comp, \control|cont_salto~2 , control|cont_salto~2, Main, 1
instance = comp, \control|state~57 , control|state~57, Main, 1
instance = comp, \control|state.leOP2 , control|state.leOP2, Main, 1
instance = comp, \control|state~38 , control|state~38, Main, 1
instance = comp, \control|state~40 , control|state~40, Main, 1
instance = comp, \control|state.lePilha , control|state.lePilha, Main, 1
instance = comp, \control|state~44 , control|state~44, Main, 1
instance = comp, \control|state.escreveMemoria , control|state.escreveMemoria, Main, 1
instance = comp, \control|state~46 , control|state~46, Main, 1
instance = comp, \control|state.NOP , control|state.NOP, Main, 1
instance = comp, \control|state.resetPC~1 , control|state.resetPC~1, Main, 1
instance = comp, \control|state~47 , control|state~47, Main, 1
instance = comp, \control|state~48 , control|state~48, Main, 1
instance = comp, \control|state~30 , control|state~30, Main, 1
instance = comp, \control|state.leBranch3 , control|state.leBranch3, Main, 1
instance = comp, \control|state~50 , control|state~50, Main, 1
instance = comp, \control|state.incremento_adicional , control|state.incremento_adicional, Main, 1
instance = comp, \control|cont_operandos[0]~6 , control|cont_operandos[0]~6, Main, 1
instance = comp, \control|cont_operandos[0]~7 , control|cont_operandos[0]~7, Main, 1
instance = comp, \control|cont_operandos[0] , control|cont_operandos[0], Main, 1
instance = comp, \control|state~28 , control|state~28, Main, 1
instance = comp, \control|state.resetPC~13 , control|state.resetPC~13, Main, 1
instance = comp, \control|state~29 , control|state~29, Main, 1
instance = comp, \control|state~31 , control|state~31, Main, 1
instance = comp, \control|state.leBranch4 , control|state.leBranch4, Main, 1
instance = comp, \control|state.resetPC~0 , control|state.resetPC~0, Main, 1
instance = comp, \control|state.incremento_adicional~0 , control|state.incremento_adicional~0, Main, 1
instance = comp, \control|state~55 , control|state~55, Main, 1
instance = comp, \control|state.leOP1 , control|state.leOP1, Main, 1
instance = comp, \control|state.resetPC~3 , control|state.resetPC~3, Main, 1
instance = comp, \control|state.resetPC~4 , control|state.resetPC~4, Main, 1
instance = comp, \control|state.resetPC~6 , control|state.resetPC~6, Main, 1
instance = comp, \control|state.resetPC~7 , control|state.resetPC~7, Main, 1
instance = comp, \control|state.resetPC~8 , control|state.resetPC~8, Main, 1
instance = comp, \control|state~56 , control|state~56, Main, 1
instance = comp, \control|state.decodifica , control|state.decodifica, Main, 1
instance = comp, \control|Equal14~0 , control|Equal14~0, Main, 1
instance = comp, \control|state~25 , control|state~25, Main, 1
instance = comp, \control|state~41 , control|state~41, Main, 1
instance = comp, \control|state~42 , control|state~42, Main, 1
instance = comp, \control|state.leMemoria , control|state.leMemoria, Main, 1
instance = comp, \control|Equal16~0 , control|Equal16~0, Main, 1
instance = comp, \control|state~26 , control|state~26, Main, 1
instance = comp, \control|state~27 , control|state~27, Main, 1
instance = comp, \control|state.escrevePilha , control|state.escrevePilha, Main, 1
instance = comp, \pilha|Add0~0 , pilha|Add0~0, Main, 1
instance = comp, \pilha|Add0~3 , pilha|Add0~3, Main, 1
instance = comp, \pilha|Add0~6 , pilha|Add0~6, Main, 1
instance = comp, \pilha|Add0~8 , pilha|Add0~8, Main, 1
instance = comp, \pilha|top_of_stack[2]~feeder , pilha|top_of_stack[2]~feeder, Main, 1
instance = comp, \pilha|top_of_stack[2] , pilha|top_of_stack[2], Main, 1
instance = comp, \pilha|Add0~9 , pilha|Add0~9, Main, 1
instance = comp, \pilha|Add0~11 , pilha|Add0~11, Main, 1
instance = comp, \pilha|top_of_stack[3] , pilha|top_of_stack[3], Main, 1
instance = comp, \pilha|Add0~12 , pilha|Add0~12, Main, 1
instance = comp, \pilha|Add0~14 , pilha|Add0~14, Main, 1
instance = comp, \pilha|top_of_stack[4] , pilha|top_of_stack[4], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[9] , pilha|ram_rtl_0_bypass[9], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[10]~feeder , pilha|ram_rtl_0_bypass[10]~feeder, Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[10] , pilha|ram_rtl_0_bypass[10], Main, 1
instance = comp, \pilha|ram~16 , pilha|ram~16, Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[7] , pilha|ram_rtl_0_bypass[7], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[8] , pilha|ram_rtl_0_bypass[8], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[6] , pilha|ram_rtl_0_bypass[6], Main, 1
instance = comp, \pilha|ram~15 , pilha|ram~15, Main, 1
instance = comp, \pilha|ram~17 , pilha|ram~17, Main, 1
instance = comp, \clk_externo~input , clk_externo~input, Main, 1
instance = comp, \clk_externo~inputclkctrl , clk_externo~inputclkctrl, Main, 1
instance = comp, \control|data_stack_from[1]~1 , control|data_stack_from[1]~1, Main, 1
instance = comp, \data_stack[4]~0 , data_stack[4]~0, Main, 1
instance = comp, \control|Equal15~0 , control|Equal15~0, Main, 1
instance = comp, \Equal0~0 , Equal0~0, Main, 1
instance = comp, \data_stack[1]~1 , data_stack[1]~1, Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[11] , pilha|ram_rtl_0_bypass[11], Main, 1
instance = comp, \pilha|Add0~2 , pilha|Add0~2, Main, 1
instance = comp, \pilha|top_of_stack[0] , pilha|top_of_stack[0], Main, 1
instance = comp, \pilha|Add0~5 , pilha|Add0~5, Main, 1
instance = comp, \pilha|top_of_stack[1] , pilha|top_of_stack[1], Main, 1
instance = comp, \control|Selector9~0 , control|Selector9~0, Main, 1
instance = comp, \var_address[0]~2 , var_address[0]~2, Main, 1
instance = comp, \var_address[1]~3 , var_address[1]~3, Main, 1
instance = comp, \var_address[2]~4 , var_address[2]~4, Main, 1
instance = comp, \var_address[4]~5 , var_address[4]~5, Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[12] , pilha|ram_rtl_0_bypass[12], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[13] , pilha|ram_rtl_0_bypass[13], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[14] , pilha|ram_rtl_0_bypass[14], Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[15] , pilha|ram_rtl_0_bypass[15], Main, 1
instance = comp, \control|data_stack_from[1]~2 , control|data_stack_from[1]~2, Main, 1
instance = comp, \pilha|ram_rtl_0_bypass[17] , pilha|ram_rtl_0_bypass[17], Main, 1
instance = comp, \myUla|opA[7]~_Duplicate_1 , myUla|opA[7]~_Duplicate_1, Main, 1
instance = comp, \myUla|Add0~29 , myUla|Add0~29, Main, 1
instance = comp, \myUla|Equal0~0 , myUla|Equal0~0, Main, 1
instance = comp, \myUla|opB[6] , myUla|opB[6], Main, 1
instance = comp, \myUla|Add0~26 , myUla|Add0~26, Main, 1
instance = comp, \myUla|opB[5]~feeder , myUla|opB[5]~feeder, Main, 1
instance = comp, \myUla|opB[5] , myUla|opB[5], Main, 1
instance = comp, \myUla|Add0~22 , myUla|Add0~22, Main, 1
instance = comp, \myUla|opB[4] , myUla|opB[4], Main, 1
instance = comp, \myUla|Add0~18 , myUla|Add0~18, Main, 1
instance = comp, \myUla|opA[3]~_Duplicate_1 , myUla|opA[3]~_Duplicate_1, Main, 1
instance = comp, \myUla|opA[2]~_Duplicate_1 , myUla|opA[2]~_Duplicate_1, Main, 1
instance = comp, \myUla|opB[1] , myUla|opB[1], Main, 1
instance = comp, \myUla|Add0~6 , myUla|Add0~6, Main, 1
instance = comp, \myUla|Add0~2 , myUla|Add0~2, Main, 1
instance = comp, \myUla|Add0~3 , myUla|Add0~3, Main, 1
instance = comp, \myUla|Add0~7 , myUla|Add0~7, Main, 1
instance = comp, \myUla|Add0~11 , myUla|Add0~11, Main, 1
instance = comp, \myUla|Add0~15 , myUla|Add0~15, Main, 1
instance = comp, \myUla|Add0~19 , myUla|Add0~19, Main, 1
instance = comp, \myUla|Add0~23 , myUla|Add0~23, Main, 1
instance = comp, \myUla|Add0~27 , myUla|Add0~27, Main, 1
instance = comp, \myUla|Add0~30 , myUla|Add0~30, Main, 1
instance = comp, \myUla|opB[0] , myUla|opB[0], Main, 1
instance = comp, \myUla|opB[2] , myUla|opB[2], Main, 1
instance = comp, \myUla|opB[3] , myUla|opB[3], Main, 1
instance = comp, \myUla|Mult0|auto_generated|mac_mult1 , myUla|Mult0|auto_generated|mac_mult1, Main, 1
instance = comp, \myUla|Mult0|auto_generated|mac_out2 , myUla|Mult0|auto_generated|mac_out2, Main, 1
instance = comp, \variables|ram_rtl_0|auto_generated|ram_block1a0 , variables|ram_rtl_0|auto_generated|ram_block1a0, Main, 1
instance = comp, \data_stack[7]~16 , data_stack[7]~16, Main, 1
instance = comp, \data_stack[7]~17 , data_stack[7]~17, Main, 1
instance = comp, \data_stack[7]~18 , data_stack[7]~18, Main, 1
instance = comp, \pilha|ram_rtl_0|auto_generated|ram_block1a0 , pilha|ram_rtl_0|auto_generated|ram_block1a0, Main, 1
instance = comp, \pilha|ram~24 , pilha|ram~24, Main, 1
instance = comp, \data_stack[6]~13 , data_stack[6]~13, Main, 1
instance = comp, \data_stack[6]~14 , data_stack[6]~14, Main, 1
instance = comp, \data_stack[6]~15 , data_stack[6]~15, Main, 1
instance = comp, \pilha|ram~23 , pilha|ram~23, Main, 1
instance = comp, \data_stack[5]~11 , data_stack[5]~11, Main, 1
instance = comp, \myUla|Add0~25 , myUla|Add0~25, Main, 1
instance = comp, \data_stack[5]~12 , data_stack[5]~12, Main, 1
instance = comp, \pilha|ram~22 , pilha|ram~22, Main, 1
instance = comp, \data_stack[4]~9 , data_stack[4]~9, Main, 1
instance = comp, \myUla|Add0~21 , myUla|Add0~21, Main, 1
instance = comp, \data_stack[4]~10 , data_stack[4]~10, Main, 1
instance = comp, \pilha|ram~21 , pilha|ram~21, Main, 1
instance = comp, \myUla|Add0~17 , myUla|Add0~17, Main, 1
instance = comp, \data_stack[3]~8 , data_stack[3]~8, Main, 1
instance = comp, \pilha|ram~20 , pilha|ram~20, Main, 1
instance = comp, \data_stack[2]~6 , data_stack[2]~6, Main, 1
instance = comp, \myUla|Add0~13 , myUla|Add0~13, Main, 1
instance = comp, \data_stack[2]~7 , data_stack[2]~7, Main, 1
instance = comp, \pilha|ram~19 , pilha|ram~19, Main, 1
instance = comp, \control|data_stack_from[1]~0 , control|data_stack_from[1]~0, Main, 1
instance = comp, \data_stack[1]~4 , data_stack[1]~4, Main, 1
instance = comp, \myUla|Add0~9 , myUla|Add0~9, Main, 1
instance = comp, \data_stack[1]~5 , data_stack[1]~5, Main, 1
instance = comp, \pilha|ram~18 , pilha|ram~18, Main, 1
instance = comp, \myUla|opA[0]~_Duplicate_1 , myUla|opA[0]~_Duplicate_1, Main, 1
instance = comp, \myUla|Add0~5 , myUla|Add0~5, Main, 1
instance = comp, \data_stack[0]~2 , data_stack[0]~2, Main, 1
instance = comp, \data_stack[0]~3 , data_stack[0]~3, Main, 1
instance = comp, \pilha|ram~25 , pilha|ram~25, Main, 1
instance = comp, \myUla|opB[7] , myUla|opB[7], Main, 1
instance = comp, \myUla|opA[6]~_Duplicate_1 , myUla|opA[6]~_Duplicate_1, Main, 1
instance = comp, \myUla|opA[5]~_Duplicate_1 , myUla|opA[5]~_Duplicate_1, Main, 1
instance = comp, \myUla|LessThan1~1 , myUla|LessThan1~1, Main, 1
instance = comp, \myUla|LessThan1~3 , myUla|LessThan1~3, Main, 1
instance = comp, \myUla|LessThan1~5 , myUla|LessThan1~5, Main, 1
instance = comp, \myUla|LessThan1~7 , myUla|LessThan1~7, Main, 1
instance = comp, \myUla|LessThan1~9 , myUla|LessThan1~9, Main, 1
instance = comp, \myUla|LessThan1~11 , myUla|LessThan1~11, Main, 1
instance = comp, \myUla|LessThan1~13 , myUla|LessThan1~13, Main, 1
instance = comp, \myUla|LessThan1~14 , myUla|LessThan1~14, Main, 1
instance = comp, \myUla|LessThan0~1 , myUla|LessThan0~1, Main, 1
instance = comp, \myUla|LessThan0~3 , myUla|LessThan0~3, Main, 1
instance = comp, \myUla|LessThan0~5 , myUla|LessThan0~5, Main, 1
instance = comp, \myUla|LessThan0~7 , myUla|LessThan0~7, Main, 1
instance = comp, \myUla|LessThan0~9 , myUla|LessThan0~9, Main, 1
instance = comp, \myUla|LessThan0~11 , myUla|LessThan0~11, Main, 1
instance = comp, \myUla|LessThan0~13 , myUla|LessThan0~13, Main, 1
instance = comp, \myUla|LessThan0~14 , myUla|LessThan0~14, Main, 1
instance = comp, \control|cont_salto~3 , control|cont_salto~3, Main, 1
instance = comp, \control|cont_salto~4 , control|cont_salto~4, Main, 1
instance = comp, \myUla|Equal2~3 , myUla|Equal2~3, Main, 1
instance = comp, \myUla|opA[1]~_Duplicate_1 , myUla|opA[1]~_Duplicate_1, Main, 1
instance = comp, \myUla|Equal2~0 , myUla|Equal2~0, Main, 1
instance = comp, \myUla|Equal2~2 , myUla|Equal2~2, Main, 1
instance = comp, \myUla|Equal2~4 , myUla|Equal2~4, Main, 1
instance = comp, \control|cont_salto~5 , control|cont_salto~5, Main, 1
instance = comp, \control|cont_salto , control|cont_salto, Main, 1
instance = comp, \control|Equal2~0 , control|Equal2~0, Main, 1
instance = comp, \control|state~53 , control|state~53, Main, 1
instance = comp, \control|state~54 , control|state~54, Main, 1
instance = comp, \control|state.leBranch2 , control|state.leBranch2, Main, 1
instance = comp, \calc_branch|branch2[0]~0 , calc_branch|branch2[0]~0, Main, 1
instance = comp, \calc_branch|branch2[2] , calc_branch|branch2[2], Main, 1
instance = comp, \calc_branch|outAddr[2]~2 , calc_branch|outAddr[2]~2, Main, 1
instance = comp, \program_counter|pc[2] , program_counter|pc[2], Main, 1
instance = comp, \mem|addr_reg[2] , mem|addr_reg[2], Main, 1
instance = comp, \mem|ram~14 , mem|ram~14, Main, 1
instance = comp, \control|opcode[7] , control|opcode[7], Main, 1
instance = comp, \control|state~43 , control|state~43, Main, 1
instance = comp, \control|cont_operandos[1]~4 , control|cont_operandos[1]~4, Main, 1
instance = comp, \control|cont_operandos[1]~5 , control|cont_operandos[1]~5, Main, 1
instance = comp, \control|cont_operandos[1] , control|cont_operandos[1], Main, 1
instance = comp, \control|Equal5~0 , control|Equal5~0, Main, 1
instance = comp, \control|state~58 , control|state~58, Main, 1
instance = comp, \control|state~52 , control|state~52, Main, 1
instance = comp, \control|state.leBranch1 , control|state.leBranch1, Main, 1
instance = comp, \control|state.resetPC~2 , control|state.resetPC~2, Main, 1
instance = comp, \control|state.resetPC~10 , control|state.resetPC~10, Main, 1
instance = comp, \control|state.resetPC~11 , control|state.resetPC~11, Main, 1
instance = comp, \control|state.resetPC~12 , control|state.resetPC~12, Main, 1
instance = comp, \control|state.resetPC , control|state.resetPC, Main, 1
instance = comp, \control|state~36 , control|state~36, Main, 1
instance = comp, \control|state.leInstrucao , control|state.leInstrucao, Main, 1
instance = comp, \control|opcode[4] , control|opcode[4], Main, 1
instance = comp, \control|jump~0 , control|jump~0, Main, 1
instance = comp, \control|jump~1 , control|jump~1, Main, 1
instance = comp, \program_counter|pc[3] , program_counter|pc[3], Main, 1
instance = comp, \mem|addr_reg[3] , mem|addr_reg[3], Main, 1
instance = comp, \mem|ram~0 , mem|ram~0, Main, 1
instance = comp, \mem|ram~3 , mem|ram~3, Main, 1
instance = comp, \calc_branch|branch2[0] , calc_branch|branch2[0], Main, 1
instance = comp, \calc_branch|outAddr[6]~5 , calc_branch|outAddr[6]~5, Main, 1
instance = comp, \program_counter|pc[6] , program_counter|pc[6], Main, 1
instance = comp, \program_counter|pc[7]~26 , program_counter|pc[7]~26, Main, 1
instance = comp, \program_counter|pc[7] , program_counter|pc[7], Main, 1
instance = comp, \program_counter|pc[8]~28 , program_counter|pc[8]~28, Main, 1
instance = comp, \program_counter|pc[9]~30 , program_counter|pc[9]~30, Main, 1
instance = comp, \calc_branch|branch1[0] , calc_branch|branch1[0], Main, 1
instance = comp, \calc_branch|branch1[5] , calc_branch|branch1[5], Main, 1
instance = comp, \calc_branch|outAddr[9]~8 , calc_branch|outAddr[9]~8, Main, 1
instance = comp, \program_counter|pc[9] , program_counter|pc[9], Main, 1
instance = comp, \mem|addr_reg[9] , mem|addr_reg[9], Main, 1
instance = comp, \calc_branch|branch1[4] , calc_branch|branch1[4], Main, 1
instance = comp, \calc_branch|outAddr[8]~7 , calc_branch|outAddr[8]~7, Main, 1
instance = comp, \program_counter|pc[8] , program_counter|pc[8], Main, 1
instance = comp, \mem|addr_reg[8] , mem|addr_reg[8], Main, 1
instance = comp, \program_counter|pc[10]~32 , program_counter|pc[10]~32, Main, 1
instance = comp, \program_counter|pc[11]~34 , program_counter|pc[11]~34, Main, 1
instance = comp, \calc_branch|branch1[2] , calc_branch|branch1[2], Main, 1
instance = comp, \calc_branch|branch1[7] , calc_branch|branch1[7], Main, 1
instance = comp, \calc_branch|outAddr[11]~10 , calc_branch|outAddr[11]~10, Main, 1
instance = comp, \program_counter|pc[11] , program_counter|pc[11], Main, 1
instance = comp, \mem|addr_reg[11] , mem|addr_reg[11], Main, 1
instance = comp, \mem|ram~2 , mem|ram~2, Main, 1
instance = comp, \mem|ram~5 , mem|ram~5, Main, 1
instance = comp, \calc_branch|branch2[1] , calc_branch|branch2[1], Main, 1
instance = comp, \calc_branch|outAddr[1]~1 , calc_branch|outAddr[1]~1, Main, 1
instance = comp, \program_counter|pc[1] , program_counter|pc[1], Main, 1
instance = comp, \program_counter|pc[4]~20 , program_counter|pc[4]~20, Main, 1
instance = comp, \calc_branch|outAddr[4]~3 , calc_branch|outAddr[4]~3, Main, 1
instance = comp, \program_counter|pc[4] , program_counter|pc[4], Main, 1
instance = comp, \calc_branch|branch1[1] , calc_branch|branch1[1], Main, 1
instance = comp, \calc_branch|outAddr[5]~4 , calc_branch|outAddr[5]~4, Main, 1
instance = comp, \program_counter|pc[5] , program_counter|pc[5], Main, 1
instance = comp, \mem|addr_reg[5]~feeder , mem|addr_reg[5]~feeder, Main, 1
instance = comp, \mem|addr_reg[5] , mem|addr_reg[5], Main, 1
instance = comp, \mem|addr_reg[4] , mem|addr_reg[4], Main, 1
instance = comp, \mem|addr_reg[7] , mem|addr_reg[7], Main, 1
instance = comp, \mem|ram~1 , mem|ram~1, Main, 1
instance = comp, \mem|ram~11 , mem|ram~11, Main, 1
instance = comp, \control|opcode[5] , control|opcode[5], Main, 1
instance = comp, \control|Equal13~0 , control|Equal13~0, Main, 1
instance = comp, \control|state~32 , control|state~32, Main, 1
instance = comp, \control|state~34 , control|state~34, Main, 1
instance = comp, \control|state~35 , control|state~35, Main, 1
instance = comp, \control|state.atualizaPC , control|state.atualizaPC, Main, 1
instance = comp, \control|increment_pc , control|increment_pc, Main, 1
instance = comp, \control|increment_pc~clkctrl , control|increment_pc~clkctrl, Main, 1
instance = comp, \calc_branch|outAddr[0]~0 , calc_branch|outAddr[0]~0, Main, 1
instance = comp, \program_counter|pc[0] , program_counter|pc[0], Main, 1
instance = comp, \calc_branch|branch1[6] , calc_branch|branch1[6], Main, 1
instance = comp, \calc_branch|outAddr[10]~9 , calc_branch|outAddr[10]~9, Main, 1
instance = comp, \program_counter|pc[10] , program_counter|pc[10], Main, 1
instance = comp, \myUla|Add0~32 , myUla|Add0~32, Main, 1
instance = comp, \myUla|Add0~33 , myUla|Add0~33, Main, 1
instance = comp, \myUla|opA[4]~_Duplicate_1 , myUla|opA[4]~_Duplicate_1, Main, 1
instance = comp, \calc_branch|outAddr[7]~6 , calc_branch|outAddr[7]~6, Main, 1
